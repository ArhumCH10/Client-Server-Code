#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
#include<arpa/inet.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<sys/types.h>
#include<string.h>

#define PORT 8080
#define MAXLINE 1024

int main()
{
    int sockfd;
    char *hello= "Hello Mr Chips";
    char buffer[MAXLINE];
    struct sockaddr_in servaddr, cliaddr;
    
    if ((sockfd= socket(AF_INET, SOCK_STREAM, 0))<0)
    {
       perror("Socket not build");
       exit(EXIT_FAILURE);
    }
    
    memset(&servaddr,0, sizeof(servaddr));
    memset(&cliaddr, 0, sizeof(cliaddr));
    
    servaddr.sin_family = AF_INET;
    servaddr.sin_addr.s_addr = INADDR_ANY;
    servaddr.sin_port = htons(PORT);
    
    if (bind (sockfd, (const struct sockaddr*)&servaddr,sizeof (servaddr)) < 0)
    {
      perror("BInding Failed");
      exit(EXIT_FAILURE);
    }
    
    listen(sockfd, 5);
    int newfd;
    int len = sizeof(cliaddr);
    
    newfd = accept(sockfd, (struct sockaddr*)&cliaddr, &len);
    
    int n = recv(newfd, (char*)buffer, MAXLINE, 0);
    buffer[n] = '\0';
    
    printf("Data Recieved is: %s\n", buffer);
    
    
    send(newfd, (const char*) hello,  strlen(hello),0);
    printf("Data Sent is: %s\n", hello); 
}